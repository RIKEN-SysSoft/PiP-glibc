name: pip-glibc Docker image

on: 

  repository_dispatch:
    types: [pip-glibc-rpm-built]

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        distro: ${{ github.event.client_payload.distros }}
        archtype: ${{ github.event.client_payload.archtypes }}

    runs-on: ubuntu-latest

    steps:

      - name: Define variables - archsuffix and platforms
        id: var
        run: |
          case ${{ matrix.archtype }} in
          multiarch)
            platforms=linux/amd64,linux/arm64
            archsuffix=
            ;;
          *)
            platforms=linux/${{ matrix.archtype }}
            archsuffix=-${{ matrix.archtype }}
            ;;
          esac
          echo "::set-output name=platforms::$platforms"
          echo "::set-output name=docker_tag::${{ matrix.distro }}${archsuffix}"
           
      - name: sparse checkout default branch
        run: |
          git clone --filter=blob:none --no-checkout --depth 1 --sparse https://github.com/${GITHUB_REPOSITORY}.git .
          git sparse-checkout init --cone
          git sparse-checkout add releng
          git checkout
          ls -CF

      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: releng/docker/pip-glibc
          platforms: ${{ steps.var.outputs.platforms }}
          file: releng/docker/pip-glibc/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USER }}/pip-glibc:${{ steps.var.outputs.docker_tag }}
          build-args: |
             DOCKER_BASE=${{ secrets.DOCKERHUB_USER }}/pip-prep:${{ matrix.distro }}
             DISTRO=${{ matrix.distro }}
             GITHUB_REPOSITORY=${{ github.repository }}
             PIP_BUILD_TOKEN=${{ secrets.PIP_BUILD_TOKEN }}
          push: true

  dispatch:

    needs: [build]

    strategy:
      matrix:
        repo: ['${{ github.repository_owner }}/PiP']

    runs-on: ubuntu-latest

    steps:

      - name: debug printf
        run: |
          echo "distros=<${{ github.event.client_payload.distros }}>"
          echo "distros=<${{ toJson(github.event.client_payload.distros) }}>"

      - name: dispatch event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PIP_BUILD_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: pip-glibc-built
          client-payload: '{ "distros": ${{ toJson(github.event.client_payload.distros) }} }'
