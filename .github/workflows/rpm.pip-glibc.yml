name: pip-glibc RPM

on:
  repository_dispatch:
    types: [pip-glibc-test-ok]

jobs:

  source:

    strategy:
      fail-fast: false
      matrix:
        distro: ${{ github.event.client_payload.distros }}

    runs-on: ubuntu-latest

    steps:

      - name: determine configuration
        id: config
        run: |
          pip_glibc_release=3
          case ${{ matrix.distro }} in
          centos7)
            base_name=glibc-2.17-260.el7
            base_srpm=http://ftp.pbone.net/mirror/vault.centos.org/7.5.1804/cr/Source/SPackages/${base_name}.src.rpm
            base_branch=centos/${base_name}.branch
            pip_branch=centos/${base_name}.pip.branch
            patch=glibc-el7-pip${pip_glibc_release}.patch
            ;;
          centos8)
            base_name=glibc-2.28-72.el8_1.1
            base_srpm=http://ftp.pbone.net/mirror/vault.centos.org/8.1.1911/BaseOS/Source/SPackages/${base_name}.src.rpm
            base_branch=centos/${base_name}.branch
            pip_branch=centos/${base_name}.pip.branch
            patch=glibc-el8-pip${pip_glibc_release}.patch
            ;;
          *)
            echo >&2 "unknown distro <${{ matrix.distro }}>"
            exit 1
            ;;
          esac
          echo "::set-output name=pip_glibc_release::${pip_glibc_release}"
          echo "::set-output name=base_name::${base_name}"
          echo "::set-output name=base_srpm::${base_srpm}"
          echo "::set-output name=base_branch::${base_branch}"
          echo "::set-output name=pip_branch::${pip_branch}"
          echo "::set-output name=patch::${patch}"

      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.config.outputs.pip_branch }}

      - name: create SRPM
        run: |
          set -x
          distro=${{ matrix.distro }}
          pip_glibc_release=${{ steps.config.outputs.pip_glibc_release }}
          base_name=${{ steps.config.outputs.base_name }}
          base_srpm=${{ steps.config.outputs.base_srpm }}
          base_branch=${{ steps.config.outputs.base_branch }}
          pip_branch=${{ steps.config.outputs.pip_branch }}
          patch=${{ steps.config.outputs.patch }}
          git fetch origin ${base_branch}
          git diff origin/${base_branch} ${pip_branch} >/tmp/${patch}
          cd releng
          mv /tmp/${patch} ./
          docker run -v $(pwd):/host -e "RPM_BASE_SRPM=${base_srpm}" -e "RPM_PATCH=/host/${patch}" -e 'RPM_SPEC=/host/pip-glibc.spec' -e 'RPM_RESULTS=/host/results' ${{ secrets.DOCKERHUB_USER }}/pip-prep:${distro} /host/docker/pip-glibc-rpm/source.sh

      - name: upload SRPM
        uses: actions/upload-artifact@v2
        with:
          name: pip-glibc-${{ matrix.distro }}-srpm
          path: releng/results
